<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BihuApiCore</name>
    </assembly>
    <members>
        <member name="T:BihuApiCore.Controllers.ApiBaseController">
            <summary>
            Api基础控制器
            </summary>
        </member>
        <member name="M:BihuApiCore.Controllers.ApiBaseController.Ok(System.String)">
            <summary>
              返回成功结果
            </summary>
            <param name="message">结果信息</param>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.ApiBaseController.Ok``1(``0)">
            <summary>
            返回成功结果
            </summary>
            <param name="data">结果数据集</param>
            <returns></returns>
        </member>
        <member name="T:BihuApiCore.Controllers.AsyncIoController">
            <summary>
            异步io控制器
            </summary>
        </member>
        <member name="M:BihuApiCore.Controllers.AsyncIoController.SyncIoExcel">
            <summary>
            同步方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.AsyncIoController.AsyncIoExcel">
            <summary>
            异步方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.BaseController.Ok(System.String)">
            <summary>
              返回成功结果
            </summary>
            <param name="message">结果信息</param>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.BaseController.Ok``1(``0)">
            <summary>
            返回成功结果
            </summary>
            <param name="data">结果数据集</param>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.ExcelController.ListToExcelFile">
            <summary>
            列表转换为本地文件，并返回绝对路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.ExcelController.ActionResultFile">
            <summary>
            列表转换为本地文件，并返回绝对路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.ExcelController.ListToExcelByte">
            <summary>
            列表转换为流，并通过流返回  使用这个方法要关闭日志中间件，不然会报错
            </summary>
            <returns></returns>
        </member>
        <member name="T:BihuApiCore.Controllers.HttpController">
            <summary>
            http请求控制器
            </summary>
        </member>
        <member name="M:BihuApiCore.Controllers.HttpController.FormRequest">
            <summary>
            表单请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.HttpController.Test">
            <summary>
            测试Authorize
            </summary>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.PayController.AliPay">
            <summary>
            短信支付跳转页面   所有充值都是给自己充值，避免我充值，其他人消费了
            </summary>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.RabbitMqController.MqClientSendNomal">
            <summary>
            SendNomal
            </summary>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.RabbitMqController.MqClientSendDead">
            <summary>
            SendDead
            </summary>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.RabbitMqController.MqClientSendDelay">
            <summary>
            SendDelay
            </summary>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.RabbitMqController.Send">
            <summary>
            Send hello world
            </summary>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.RabbitMqController.SendDirect(System.String)">
            <summary>
            SendDirect
            </summary>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.RedisController.Test">
            <summary>
            测试
            </summary>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.RedisController.RedisDistributedLock">
            <summary>
            使用redis作为并发锁
            </summary>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.RedisController.RedisDistributedLockMy">
            <summary>
            使用redis作为并发锁
            </summary>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.RedisController.RedisConcurrentLock">
            <summary>
            使用redis作为并发锁
            </summary>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.SqlController.DapperGetList">
            <summary>
            查询列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.SqlController.DapperBulkInsert">
            <summary>
            批量插入
            </summary>
            <returns></returns>
        </member>
        <member name="T:BihuApiCore.Controllers.UserController">
            <summary>
            用户控制器
            </summary>
        </member>
        <member name="M:BihuApiCore.Controllers.UserController.Test">
            <summary>
            测试get 同步  重试
            </summary>
            <returns></returns>
        </member>
        <member name="M:BihuApiCore.Controllers.UserController.TestAsy">
            <summary>
            测试get 异步
            </summary>
            <returns></returns>
        </member>
        <member name="T:BihuApiCore.Events.EventHandler.NormalEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:BihuApiCore.Events.Event.DeadEvent">
            <summary>
            死信事件
            </summary>
        </member>
        <member name="P:BihuApiCore.Events.Event.DeadEvent.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="T:BihuApiCore.Events.Event.DelayEvent">
            <summary>
            死信事件
            </summary>
        </member>
        <member name="P:BihuApiCore.Events.Event.DelayEvent.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="T:BihuApiCore.Events.Event.NormalEvent">
            <summary>
            普通事件
            </summary>
        </member>
        <member name="P:BihuApiCore.Events.Event.NormalEvent.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="T:BihuApiCore.Filters.LogAttribute">
            <summary>
            全局日志记录
            </summary>
        </member>
        <member name="T:BihuApiCore.Middlewares.ErrorHandlerMiddleware">
            <summary>
            异常捕获中间件
            </summary>
        </member>
        <member name="M:BihuApiCore.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            服务添加到服务容器中
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:BihuApiCore.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            我的理解是对组建进行配置,注册中间件到管道中
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="loggerFactory"></param>
        </member>
        <member name="M:BihuApiCore.Startup.ConfigureRabbitMq(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            配置mq订阅
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:BihuApiCore.Startup.ConfigureRabbitMqDirect(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            配置mq订阅Direct模式
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:BihuApiCore.Startup.ConfigureRabbitMqClient(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            配置RabbitMqClient订阅
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:BihuApiCore.CustomExtensionsMethods.AddRabbitmq(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            个性化集成
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
    </members>
</doc>
